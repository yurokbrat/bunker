# Generated by Django 5.0.9 on 2024-10-16 13:28

import bunker_game.utils.generate_hide_name
import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AdditionalInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='название')),
            ],
            options={
                'verbose_name': 'доп. информация',
            },
        ),
        migrations.CreateModel(
            name='Baggage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='название')),
                ('status', models.CharField(choices=[('intact', 'Целый'), ('damaged', 'Поврежденный')], max_length=50, verbose_name='состояние')),
            ],
            options={
                'verbose_name': 'багаж',
            },
        ),
        migrations.CreateModel(
            name='BunkerRoom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='название комнаты')),
                ('area', models.PositiveSmallIntegerField(verbose_name='площадь комнаты в м²')),
            ],
            options={
                'verbose_name': 'комната бункера',
                'verbose_name_plural': 'комнаты бункеров',
            },
        ),
        migrations.CreateModel(
            name='Card',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120, verbose_name='название')),
                ('type', models.CharField(choices=[('catastrophe', 'Эпидемия'), ('bunker_type', 'Тип бункера'), ('profession', 'Профессия'), ('gender', 'Пол'), ('orientation', 'Ориентация'), ('health', 'Здоровье'), ('phobia', 'Фобия'), ('character', 'Характер'), ('hobby', 'Хобби'), ('add_info', 'Доп. Информация'), ('item', 'Багаж')], verbose_name='тип карточки')),
            ],
            options={
                'verbose_name': 'карточка',
                'verbose_name_plural': 'карточки',
            },
        ),
        migrations.CreateModel(
            name='Catastrophe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='название')),
                ('description', models.CharField(max_length=250, verbose_name='описание')),
                ('image', models.ImageField(upload_to=bunker_game.utils.generate_hide_name.upload_to_catastrophes, verbose_name='фотография')),
                ('impact_level', models.IntegerField(default=1, help_text='Урон катастрофы по пятибалльной шкале', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='масштаб катастрофы')),
            ],
            options={
                'verbose_name': 'катастрофа',
                'verbose_name_plural': 'катастрофы',
            },
        ),
        migrations.CreateModel(
            name='Character',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120, verbose_name='название')),
            ],
            options={
                'verbose_name': 'характер',
                'verbose_name_plural': 'характеры',
            },
        ),
        migrations.CreateModel(
            name='Disease',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120, unique=True, verbose_name='название')),
                ('degree', models.IntegerField(verbose_name='процент болезни')),
                ('is_curable', models.BooleanField(default=True, verbose_name='можно вылечить')),
            ],
            options={
                'verbose_name': 'болезнь',
                'verbose_name_plural': 'болезни',
            },
        ),
        migrations.CreateModel(
            name='Hobby',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120, unique=True, verbose_name='название')),
                ('experience', models.CharField(choices=[('novice', 'Новичок'), ('amateur', 'Любитель'), ('experienced', 'Опытный'), ('professional', 'Профессионал'), ('master', 'Мастер')], verbose_name='опыт хобби')),
            ],
            options={
                'verbose_name': 'хобби',
            },
        ),
        migrations.CreateModel(
            name='Phobia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120, verbose_name='название')),
                ('stage', models.CharField(choices=[('none', 'Отсутствует'), ('mild', 'Легкая'), ('moderate', 'Средняя'), ('severe', 'Серьезная'), ('panic', 'Паническая')], max_length=120, verbose_name='стадия')),
            ],
            options={
                'verbose_name': 'фобия',
                'verbose_name_plural': 'фобии',
            },
        ),
        migrations.CreateModel(
            name='Profession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='профессия')),
                ('experience', models.CharField(choices=[('novice', 'Новичок'), ('amateur', 'Любитель'), ('experienced', 'Опытный'), ('professional', 'Профессионал'), ('master', 'Мастер')], verbose_name='опыт работы')),
            ],
            options={
                'verbose_name': 'профессия',
                'verbose_name_plural': 'профессии',
            },
        ),
        migrations.CreateModel(
            name='Bunker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120, unique=True, verbose_name='название')),
                ('rooms', models.ManyToManyField(to='game.bunkerroom', verbose_name='комнаты')),
            ],
            options={
                'verbose_name': 'бункер',
                'verbose_name_plural': 'бункеры',
            },
        ),
        migrations.CreateModel(
            name='Personage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('age', models.PositiveSmallIntegerField(verbose_name='возраст')),
                ('gender', models.CharField(choices=[('male', 'Мужчина'), ('female', 'Женщина')], verbose_name='пол')),
                ('orientation', models.CharField(choices=[('homosexual', 'Гомосексуален'), ('asexual', 'Асексуален'), ('heterosexual', 'Гетеросексуален')], verbose_name='ориентация')),
                ('additional_info', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='game.additionalinfo', verbose_name='доп, информация')),
                ('baggage', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='game.baggage', verbose_name='багаж')),
                ('character', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='game.character', verbose_name='характер')),
                ('disease', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='game.disease', verbose_name='болезнь')),
                ('hobby', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='game.hobby', verbose_name='хобби')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='пользователь')),
                ('phobia', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='game.phobia', verbose_name='фобия')),
                ('profession', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='game.profession', verbose_name='профессия')),
            ],
            options={
                'verbose_name': 'персонаж',
                'verbose_name_plural': 'персонажи',
            },
        ),
    ]
